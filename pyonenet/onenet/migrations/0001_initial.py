# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-06-10 11:19
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import pyonenet.onenet.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_date', models.DateTimeField(default=datetime.datetime.now, verbose_name='Last action description')),
                ('last_descrizione', models.CharField(blank=True, max_length=80, verbose_name='Last action description')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
                ('did', models.PositiveSmallIntegerField(help_text='Device ID (onenet/oneway)', verbose_name='Client identification')),
                ('invite', models.CharField(help_text='Invite Code (onenet)', max_length=50, unique=True, verbose_name='Device identification')),
                ('memdump_base_param', models.TextField(blank=True, default=None, null=True, verbose_name='memdump base_param')),
                ('memdump_peer', models.TextField(blank=True, default=None, null=True, verbose_name='memdump peer')),
                ('active', models.BooleanField(default=True, verbose_name='Attivo')),
                ('lasttransaction', models.DateTimeField(default=datetime.datetime(2017, 6, 10, 11, 19, 59, 487566), verbose_name='Data ultima transazione')),
                ('laststatus', models.CharField(default=b'SUCCESS', max_length=50, null=True, verbose_name="stato dell'ultima transazione")),
                ('pin0state', models.CharField(choices=[(b'input', b'input pin'), (b'output', b'output pin'), (b'disable', b'disabled pin')], default=b'output', max_length=7, null=True, verbose_name='Pin 0 state')),
                ('pin0onoff', models.PositiveSmallIntegerField(default=b'0', null=True, validators=[pyonenet.onenet.models.validate_onoff], verbose_name='Pin 0 onoff')),
                ('pin1state', models.CharField(choices=[(b'input', b'input pin'), (b'output', b'output pin'), (b'disable', b'disabled pin')], default=b'output', max_length=7, null=True, verbose_name='Pin 1 state')),
                ('pin1onoff', models.PositiveSmallIntegerField(default=b'0', null=True, validators=[pyonenet.onenet.models.validate_onoff], verbose_name='Pin 1 onoff')),
                ('pin2state', models.CharField(choices=[(b'input', b'input pin'), (b'output', b'output pin'), (b'disable', b'disabled pin')], default=b'input', max_length=7, null=True, verbose_name='Pin 2 state')),
                ('pin2onoff', models.PositiveSmallIntegerField(default=b'1', null=True, validators=[pyonenet.onenet.models.validate_onoff], verbose_name='Pin 2 onoff')),
                ('pin3state', models.CharField(choices=[(b'input', b'input pin'), (b'output', b'output pin'), (b'disable', b'disabled pin')], default=b'input', max_length=7, null=True, verbose_name='Pin 3 state')),
                ('pin3onoff', models.PositiveSmallIntegerField(default=b'1', null=True, validators=[pyonenet.onenet.models.validate_onoff], verbose_name='Pin 3 onoff')),
                ('lastcommand', models.DateTimeField(auto_now_add=True, verbose_name='Data ultimo comando')),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.CharField(max_length=40, verbose_name='Floor')),
            ],
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('device', models.CharField(choices=[(b'/dev/ttyUSB0', b'USB0'), (b'/dev/ttyUSB1', b'USB1'), (b'/dev/ttyUSB2', b'USB2'), (b'/dev/ttyUSB3', b'USB3')], max_length=50, unique=True, verbose_name='Serial device')),
                ('protocol', models.CharField(choices=[(b'onenet', b'One-net'), (b'oneway', b'One-way')], default=b'onenet', help_text='Board type and protocol for serial comunication', max_length=50, verbose_name='Protocol')),
                ('region', models.CharField(choices=[(b'EUR', b'Europa'), (b'US', b'United States')], max_length=50, verbose_name='Region')),
                ('channel', models.CharField(choices=[(b'1', b'Channel 1'), (b'2', b'Channel 2'), (b'3', b'Channel 3'), (b'4', b'Channel 4'), (b'5', b'Channel 5'), (b'6', b'Channel 6'), (b'7', b'Channel 7'), (b'8', b'Channel 8'), (b'9', b'Channel 9'), (b'10', b'Channel 10'), (b'11', b'Channel 11'), (b'12', b'Channel 12'), (b'13', b'Channel 13'), (b'14', b'Channel 14'), (b'15', b'Channel 15'), (b'16', b'Channel 16'), (b'17', b'Channel 17'), (b'18', b'Channel 18'), (b'19', b'Channel 19'), (b'20', b'Channel 20'), (b'21', b'Channel 21'), (b'22', b'Channel 22'), (b'23', b'Channel 23'), (b'24', b'Channel 24'), (b'25', b'Channel 25')], max_length=50, verbose_name='Channel')),
                ('nid', models.CharField(max_length=11, unique=True, verbose_name='Network ID')),
                ('invite', models.CharField(max_length=9, unique=True, verbose_name='Device ID')),
                ('memdump_master_param', models.TextField(blank=True, default=None, null=True, verbose_name='memdump master_param')),
                ('memdump_base_param', models.TextField(blank=True, default=None, null=True, verbose_name='memdump base_param')),
                ('memdump_client_list', models.TextField(blank=True, default=None, null=True, verbose_name='memdump client_list')),
                ('memdump_peer', models.TextField(blank=True, default=None, null=True, verbose_name='memdump peer')),
                ('free', models.BooleanField(default=False, verbose_name='Activate all')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.CharField(max_length=40, verbose_name='Room')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('aperto', models.BooleanField(default=False, help_text=b'To set when solved only', verbose_name='Risolto')),
                ('date', models.DateTimeField(default=datetime.datetime.now, verbose_name='Open data')),
                ('priorita', models.IntegerField(choices=[(1, 'Urgent'), (2, 'Normal'), (3, 'When possible')], default=2, verbose_name='Priority')),
                ('nome', models.CharField(max_length=40, null=True, verbose_name='User name')),
                ('descrizione', models.CharField(max_length=80, verbose_name='Problem description')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='onenet.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.CharField(max_length=40, verbose_name='Zone')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='floor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='onenet.Floor'),
        ),
        migrations.AddField(
            model_name='client',
            name='master',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onenet.Master'),
        ),
        migrations.AddField(
            model_name='client',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='onenet.Room'),
        ),
        migrations.AddField(
            model_name='client',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='onenet.Zone'),
        ),
        migrations.AddField(
            model_name='action',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onenet.Ticket'),
        ),
    ]
